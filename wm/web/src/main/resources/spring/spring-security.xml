<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- 配置 不拦截页面  -->
    <http pattern="/html/login.html" security="none"></http>
    <http pattern="/user/login.do" security="none"></http>
    <http pattern="/css/**" security="none"></http>
    <http pattern="/image/**" security="none"></http>
    <http pattern="/js/**" security="none"></http>
    <http pattern="/plugins/**" security="none"></http>

    <!-- 页面拦截规则 -->
    <http use-expressions="false">
        <!-- 任意目录以及子目录
            access ： 放行
            ROLE_USER：用户组
          -->
        <intercept-url pattern="/**" access="ROLE_USER" />
        <!-- 用来指定登录页面 如果不指定使用springseruciry默认的页面 -->
        <form-login  login-page="/html/login.html" default-target-url="/html/index.html" authentication-failure-url="/html/login.html"/>
        <csrf disabled="true"/>
        <logout logout-success-url="/html/login.html" />
        <headers>
            <frame-options policy="SAMEORIGIN"/>
        </headers>

    </http>

    <!--从服务端拿到userService-->
    <dubbo:application name="web" />
    <dubbo:registry address="zookeeper://192.168.60.128:2181"/>
    <dubbo:reference id="userService" interface="com.wm.service.UserService"/>

    <beans:bean class="com.wm.service.UserDetailServiceImpl" id="userDetailService">
        <beans:property name="userService" ref="userService"/>
    </beans:bean>

    <!-- 认证管理器 -->
    <authentication-manager>
        <authentication-provider user-service-ref="userDetailService">
        </authentication-provider>
    </authentication-manager>
</beans:beans>